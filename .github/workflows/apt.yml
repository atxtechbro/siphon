name: Publish APT Package
on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
    branches:
      - main

env:
  VERSION: 1.5.0  # Keep the hardcoded version for now, but see notes below

jobs:
  apt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Original Tarball
        run: |
          # Create the .orig.tar.gz.  Simpler and more reliable method.
          ORIG_TARBALL_NAME="siphon_${{ env.VERSION }}.orig.tar.gz"
          git archive --format=tar.gz --prefix=siphon-${{ env.VERSION }}/ -o "$ORIG_TARBALL_NAME" HEAD

          if [ $? -ne 0 ]; then
            echo "ERROR: Failed to create original source tarball!"
            exit 1
          fi

          ls -l  # Debug: List files

      - name: Create Debian Source Tarball
        run: |
          # Create a temporary directory to build the source tarball
          TEMP_DIR="temp_build"
          mkdir "$TEMP_DIR"
          cp -r . "$TEMP_DIR/siphon-${{ env.VERSION }}"

          # Create the Debian source tarball
          DEB_TARBALL_NAME="siphon_${{ env.VERSION }}.tar.gz"

          # Correct tar command: include the debian/ directory at the root of the tarball
          tar -czvvvf "$DEB_TARBALL_NAME" -C "$TEMP_DIR" siphon-${{ env.VERSION }}

          if [ $? -ne 0 ]; then
            echo "ERROR: Failed to create Debian source tarball!"
            exit 1
          fi

          ls -l  # Debug: List files
          rm -rf "$TEMP_DIR" # Clean up temporary directory

      - name: Upload Tarball Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tarball-artifact
          path: |
            siphon_${{ env.VERSION }}.orig.tar.gz
            siphon_${{ env.VERSION }}.tar.gz  # Upload BOTH tarballs
          if-no-files-found: error


      - name: Build Debian Package with debmake
        run: |
          sudo apt-get update -y
          sudo apt-get install -y debmake

          # Correct debmake command:  Use the correct tarball and specify the package name and version
          debmake -f "siphon_${{ env.VERSION }}.tar.gz" -p "siphon_" -u "${{ env.VERSION }}-1"
