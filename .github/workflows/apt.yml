name: Publish APT Package
on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  # TODO: Remove 'push' trigger and use only 'release' trigger for production.
  # The 'push' trigger is currently used for faster iteration during workflow
  # development.  It should be removed and replaced with the 'release' trigger
  # below once the workflow is stable.
  # release:
  #   types: [published]

jobs:
  apt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Version from Tag or Fallback
        id: get_version
        run: |
          if [[ "${{ github.ref_name }}" == v* ]]; then
            VERSION=${GITHUB_REF_NAME#v}
          else
            VERSION="main"  # Fallback version for pushes to main
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create Original Tarball
        run: |
          ORIG_TARBALL_NAME="siphon_${{ steps.get_version.outputs.version }}.orig.tar.gz"
          git archive --format=tar.gz --prefix=siphon-${{ steps.get_version.outputs.version }}/ -o "$ORIG_TARBALL_NAME" HEAD
          ls -l

      - name: Create Debian Source Tarball
        run: |
          TEMP_DIR="temp_build"
          mkdir -p "$TEMP_DIR/siphon-${{ steps.get_version.outputs.version }}"
          # Use find to copy *everything*, including hidden files/directories
          find . -print0 | cpio -pdm0 "$TEMP_DIR/siphon-${{ steps.get_version.outputs.version }}"
          DEB_TARBALL_NAME="siphon_${{ steps.get_version.outputs.version }}.tar.gz"
          tar -czvvvf "$DEB_TARBALL_NAME" -C "$TEMP_DIR" "siphon-${{ steps.get_version.outputs.version }}"
          ls -l
          rm -rf "$TEMP_DIR"

      - name: Upload Tarball Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tarball-artifact
          path: |
            siphon_${{ steps.get_version.outputs.version }}.orig.tar.gz
            siphon_${{ steps.get_version.outputs.version }}.tar.gz
          if-no-files-found: error

      - name: Build Debian Package with debmake
        run: |
          sudo apt-get update -y
          sudo apt-get install -y debmake lintian
          debmake -f "siphon_${{ steps.get_version.outputs.version }}.tar.gz" -p "siphon_" -u "${{ steps.get_version.outputs.version }}-1"

      - name: Run Lintian
        run: |
          lintian "siphon_${{ steps.get_version.outputs.version }}-1_all.changes"